{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\",\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Personas\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"row\"\n};\nconst _hoisted_6 = {\n  class: \"col-md-12\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_formulario_persona = _resolveComponent(\"formulario-persona\");\n  const _component_tabla_personas = _resolveComponent(\"tabla-personas\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"p\", null, \"Count is \" + _toDisplayString($setup.store.count), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_formulario_persona, {\n    onAddPersona: $setup.agregarPersona\n  }, null, 8 /* PROPS */, [\"onAddPersona\"]), _createVNode(_component_tabla_personas, {\n    personas: $setup.personas,\n    onDeletePersona: $setup.eliminarPersona,\n    onActualizarPersona: $setup.actualizarPersona\n  }, null, 8 /* PROPS */, [\"personas\", \"onDeletePersona\", \"onActualizarPersona\"])])])]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$setup","store","count","_hoisted_5","_hoisted_6","_createVNode","_component_formulario_persona","onAddPersona","agregarPersona","_component_tabla_personas","personas","onDeletePersona","eliminarPersona","onActualizarPersona","actualizarPersona"],"sources":["/home/david/Cliente/libreria-vue/ClienteVue/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h1>Personas</h1>\n        <p>Count is {{ store.count }}</p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <formulario-persona @add-persona=\"agregarPersona\" />\n        <tabla-personas :personas=\"personas\" @delete-persona=\"eliminarPersona\" @actualizar-persona=\"actualizarPersona\"/>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import TablaPersonas from '@/components/TablaPersonas.vue'\n  import FormularioPersona from '@/components/FormularioPersona.vue'\n  import { useCounterStore } from '@/stores/counter';\n  import { ref, onMounted } from 'vue';\n\n  const myVar = import.meta.env.VITE_DJANGOURL;\n\n  export default {\n    name: 'app',\n    components: {\n      TablaPersonas,\n      FormularioPersona,\n    },\n    setup() {\n      const store = useCounterStore();\n      const personas = ref([]);\n      const listadoPersonas = async () => {\n        // Metodo para obtener un listado de personas\n        try {\n          const response = await fetch(myVar+'/api/v1/personas');\n          personas.value = await response.json();\n        } catch (error) {\n          console.error(error);\n        }\n      };\n\n      const agregarPersona = async (persona) => {\n        // Metodo para agregar una persona\n        try {\n          const response = await fetch(myVar+'/api/v1/personas', {\n            method: 'POST',\n            body: JSON.stringify(persona),\n            headers: { 'Content-type': 'application/json; charset=UTF-8' },\n          });\n\n          const personaCreada = await response.json();\n          personas.value = [...personas.value, personaCreada];\n          store.increment();\n        } catch (error) {\n          console.error(error);\n        }\n      };\n\n      const eliminarPersona = async (persona_id) => {\n        // Metodo para eliminar una persona\n        try {\n          await fetch(myVar+'/api/v1/personas'+persona_id+'/', {\n            method: \"DELETE\"\n          });\n          personas.value= personas.value.filter(u => u.id !== persona_id);\n          } catch (error) {\n            console.error(error);\n          }\n      };\n\n      const actualizarPersona = async (id, personaActualizada) => {\n        // Metodo para actualizar una persona\n        try {\n          const response = await fetch(myVar+'/api/v1/personas'+personaActualizada.id+'/', {\n            method: 'PUT',\n            body: JSON.stringify(personaActualizada),\n            headers: { 'Content-type': 'application/json; charset=UTF -8' },\n          });\n\n          const personaActualizadaJS = await response.json();\n          personas.value = personas.value.map(u => (u.id === personaActualizada.id ? personaActualizadaJS : u));\n        } catch (error) {\n          console.error(error);\n        }\n      };\n\n      onMounted(() => {\n        listadoPersonas();\n      });\n\n      return {\n        personas,\n        agregarPersona,\n        eliminarPersona,\n        actualizarPersona,\n        store,\n      };\n    },\n  }\n</script>\n\n<style>\n  button {\n    background: #009435;\n    border: 1px solid #009435;\n  }\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC,KAAK;EAACC,KAAK,EAAC;;;EACbA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAW;gCACpBC,mBAAA,CAAiB,YAAb,UAAQ;;EAIXD,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAW;;;;uBAR1BE,mBAAA,CAaM,OAbNC,UAaM,GAZJF,mBAAA,CAKM,OALNG,UAKM,GAJJH,mBAAA,CAGM,OAHNI,UAGM,GAFJC,UAAiB,EACjBL,mBAAA,CAAiC,WAA9B,WAAS,GAAAM,gBAAA,CAAGC,MAAA,CAAAC,KAAK,CAACC,KAAK,iB,KAG9BT,mBAAA,CAKM,OALNU,UAKM,GAJJV,mBAAA,CAGM,OAHNW,UAGM,GAFJC,YAAA,CAAoDC,6BAAA;IAA/BC,YAAW,EAAEP,MAAA,CAAAQ;EAAc,2CAChDH,YAAA,CAAgHI,yBAAA;IAA/FC,QAAQ,EAAEV,MAAA,CAAAU,QAAQ;IAAGC,eAAc,EAAEX,MAAA,CAAAY,eAAe;IAAGC,mBAAkB,EAAEb,MAAA,CAAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}